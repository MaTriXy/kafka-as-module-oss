apply plugin: 'java'
apply plugin: 'application'

group 'com.nucypher.kafka'

sourceCompatibility = 1.7
targetCompatibility = 1.7

mainClassName = 'com.nucypher.kafka.proxy.ProxyServer'
applicationName = 'nucypher-kafka-proxy'

dependencies {

    compile project(':clients')
    compile project(':kafka:clients')
    compile (project(':kafka:core')) {
        exclude group: "org.slf4j", module: 'slf4j-api'
        exclude group: "org.slf4j", module: 'slf4j-log4j12'
        exclude group: "log4j", module: 'log4j'
    }
    compile "commons-io:commons-io:$commonsIOVersion"

    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}

task copyToLib(type: Copy) {

    into "$buildDir/libs/lib"
    from configurations.runtime

    doLast {
        jar {
            archiveName = "$applicationName-${version}.${extension}"

            manifest {
                attributes("Main-Class": mainClassName)
                attributes("Class-Path": configurations.runtime.collect { "lib/$it.name" }.join(' '))
            }
        }
    }

}

jar.dependsOn copyToLib

applicationDistribution.from("config-example/") {
    into "config-example"
}

startScripts {
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replaceAll(
                'CLASSPATH=\\S*', 'CLASSPATH=%APP_HOME%\\\\lib\\\\*')
        unixScriptFile.text  = unixScriptFile.text.replaceAll(
                'CLASSPATH=\\S*\n', 'CLASSPATH=\\$APP_HOME/lib/*\n')
    }
}