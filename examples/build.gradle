apply plugin: 'java'

group 'com.nucypher.kafka'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    compile project(':clients')
    compile project(':proxy')
    compile project(path: ':commons', configuration: 'testArchives')

    compile "org.hdrhistogram:HdrHistogram:2.1.9"
    compile("io.confluent:kafka-schema-registry:$confluentVersion") {
        exclude group: "org.slf4j", module: 'slf4j-api'
        exclude group: "org.slf4j", module: 'slf4j-log4j12'
        exclude group: "org.apache.avro", module: 'avro'
        exclude group: "com.fasterxml.jackson.core", module: 'jackson-databind'
    }
    compile "org.openjdk.jmh:jmh-core:$jmhVersion"
    compile "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
}

jar {
    baseName = 'nucypher-kafka-examples'
}

copyDependenciesToLib {

    into "$buildDir/libs/lib"
    from configurations.runtime

    doLast {
        jar {

            manifest {
                attributes("Class-Path": configurations.runtime.collect { "lib/$it.name" }.join(' '))
            }
        }
    }

}

jar.dependsOn copyDependenciesToLib

def projectName = "${jar.baseName}-${version}"

task zip(type: Zip) {
    archivesBaseName = "${jar.baseName}"
    from("$buildDir/libs") {
        include '**/*.jar'
        into("${projectName}")
    }
}

task tar(type: Tar) {
    archivesBaseName = "${jar.baseName}"
    from("$buildDir/libs") {
        include '**/*.jar'
        into("${projectName}")
    }
}

zip.dependsOn jar
zip.dependsOn copyDependenciesToLib
tar.dependsOn jar
tar.dependsOn copyDependenciesToLib
build.dependsOn zip
build.dependsOn tar

